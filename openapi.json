{"openapi":"3.1.0","info":{"title":"aloha_backend","description":"","license":{"name":""},"version":"0.1.0"},"paths":{"/api/group_permissions":{"get":{"tags":["crate::routes::group_permission"],"summary":"Get all group permissions with pagination","description":"# API Documentation\n\n## GET /api/group_permissions\n\nRetrieves all group permissions with optional pagination.\n\n### Query Parameters\n- page: Page number (optional)\n- size: Items per page (optional)\n\n### Response\n- 200 OK: Returns list of group permissions\n```json\n{\n    \"data\": [\n        {\n            \"group_id\": \"uuid\",\n            \"permission_id\": \"uuid\",\n            \"created_at\": \"datetime\"\n        }\n    ],\n    \"pagination\": {\n        \"total\": 1,\n        \"page\": 1,\n        \"size\": 10,\n        \"pages\": 1\n    }\n}\n```\n- 400 Bad Request: Database error","operationId":"get_all_group_permissions_route","parameters":[{"name":"page","in":"query","description":"Page number","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"size","in":"query","description":"Page size","required":false,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Group permissions retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DtoResponse_Vec_GroupPermission"}}}},"400":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"post":{"tags":["crate::routes::group_permission"],"summary":"Create a new group permission","description":"# API Documentation\n\n## POST /api/group_permissions\n\nCreates a new group permission mapping.\n\n### Request Body\n```json\n{\n    \"group_id\": \"uuid\",\n    \"permission_id\": \"uuid\"\n}\n```\n\n### Response\n- 200 OK: Returns the created group permission\n```json\n{\n    \"group_id\": \"uuid\",\n    \"permission_id\": \"uuid\",\n    \"created_at\": \"datetime\"\n}\n```\n- 400 Bad Request: Database error","operationId":"insert_group_permission_route","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FormData"}}},"required":true},"responses":{"200":{"description":"Group permission created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupPermission"}}}},"400":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"delete":{"tags":["crate::routes::group_permission"],"summary":"Delete a group permission","description":"# API Documentation\n\n## DELETE /api/group_permissions\n\nDeletes a specific group permission mapping.\n\n### Request Body\n```json\n{\n    \"group_id\": \"uuid\",\n    \"permission_id\": \"uuid\"\n}\n```\n\n### Response\n- 200 OK: Returns the deleted group permission\n```json\n{\n    \"group_id\": \"uuid\",\n    \"permission_id\": \"uuid\",\n    \"created_at\": \"datetime\"\n}\n```\n- 400 Bad Request: Database error","operationId":"delete_group_permission_route","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FormData"}}},"required":true},"responses":{"200":{"description":"Group permission deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupPermission"}}}},"400":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/group_permissions/group/{group_id}":{"get":{"tags":["crate::routes::group_permission"],"summary":"Get group permissions by group ID","description":"# API Documentation\n\n## GET /api/group_permissions/group/{group_id}\n\nRetrieves all permissions for a specific group.\n\n### Path Parameters\n- group_id: UUID of the group\n\n### Response\n- 200 OK: Returns list of group permissions\n```json\n[\n    {\n        \"group_id\": \"uuid\",\n        \"permission_id\": \"uuid\",\n        \"created_at\": \"datetime\"\n    }\n]\n```\n- 400 Bad Request: Database error","operationId":"get_group_permissions_by_group_id_route","parameters":[{"name":"group_id","in":"path","description":"Group ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Group permissions retrieved successfully","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupPermission"}}}}},"400":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"delete":{"tags":["crate::routes::group_permission"],"summary":"Delete all permissions for a group","description":"# API Documentation\n\n## DELETE /api/group_permissions/group/{group_id}\n\nDeletes all permission mappings for a specific group.\n\n### Path Parameters\n- group_id: UUID of the group\n\n### Response\n- 200 OK: Returns list of deleted group permissions\n```json\n[\n    {\n        \"group_id\": \"uuid\",\n        \"permission_id\": \"uuid\",\n        \"created_at\": \"datetime\"\n    }\n]\n```\n- 400 Bad Request: Database error","operationId":"delete_group_permissions_by_group_id_route","parameters":[{"name":"group_id","in":"path","description":"Group ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Group permissions deleted successfully","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupPermission"}}}}},"400":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/group_permissions/permission/{permission_id}":{"get":{"tags":["crate::routes::group_permission"],"summary":"Get group permissions by permission ID","description":"# API Documentation\n\n## GET /api/group_permissions/permission/{permission_id}\n\nRetrieves all groups that have a specific permission.\n\n### Path Parameters\n- permission_id: UUID of the permission\n\n### Response\n- 200 OK: Returns list of group permissions\n```json\n[\n    {\n        \"group_id\": \"uuid\",\n        \"permission_id\": \"uuid\",\n        \"created_at\": \"datetime\"\n    }\n]\n```\n- 400 Bad Request: Database error","operationId":"get_group_permissions_by_permission_id_route","parameters":[{"name":"permission_id","in":"path","description":"Permission ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Group permissions retrieved successfully","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupPermission"}}}}},"400":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"delete":{"tags":["crate::routes::group_permission"],"summary":"Delete all groups for a permission","description":"# API Documentation\n\n## DELETE /api/group_permissions/permission/{permission_id}\n\nDeletes all group mappings for a specific permission.\n\n### Path Parameters\n- permission_id: UUID of the permission\n\n### Response\n- 200 OK: Returns list of deleted group permissions\n```json\n[\n    {\n        \"group_id\": \"uuid\",\n        \"permission_id\": \"uuid\",\n        \"created_at\": \"datetime\"\n    }\n]\n```\n- 400 Bad Request: Database error","operationId":"delete_group_permissions_by_permission_id_route","parameters":[{"name":"permission_id","in":"path","description":"Permission ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Group permissions deleted successfully","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupPermission"}}}}},"400":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/health_check":{"get":{"tags":["crate::routes::health_check"],"summary":"Health check endpoint","description":"# API Documentation\n\n## GET /api/health_check\n\nSimple health check endpoint to verify the API is running.\n\n### Response\n- 200 OK: API is healthy","operationId":"health_check","responses":{"200":{"description":"API is healthy"}}}},"/api/permissions":{"get":{"tags":["crate::routes::permission"],"summary":"Get all permissions with pagination","description":"# API Documentation\n\n## GET /api/permissions\n\nRetrieves all permissions with optional pagination and filtering.\n\n### Query Parameters\n- page: Page number (optional)\n- size: Items per page (optional)\n- sort: Sort field (optional)\n- order: Sort order (asc/desc) (optional)\n\n### Response\n- 200 OK: Returns list of permissions\n```json\n[\n    {\n        \"id\": \"uuid\",\n        \"name\": \"string\",\n        \"description\": \"string\" (optional),\n        \"created_at\": \"datetime\"\n    }\n]\n```\n- 500 Internal Server Error: Database error","operationId":"get_all_permissions_route","parameters":[{"name":"page","in":"query","description":"Page number","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"size","in":"query","description":"Page size","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"sort","in":"query","description":"Sort field","required":false,"schema":{"type":"string"}},{"name":"order","in":"query","description":"Sort order (asc/desc)","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Permissions retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DtoResponse_Vec_Permission"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"put":{"tags":["crate::routes::permission"],"summary":"Update an existing permission","description":"# API Documentation\n\n## PUT /api/permissions\n\nUpdates an existing permission.\n\n### Request Body\n```json\n{\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\" (optional),\n    \"created_at\": \"datetime\"\n}\n```\n\n### Response\n- 200 OK: Returns the updated permission\n```json\n{\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\" (optional),\n    \"created_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"update_permission_route","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}},"required":true},"responses":{"200":{"description":"Permission updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"post":{"tags":["crate::routes::permission"],"summary":"Create a new permission","description":"# API Documentation\n\n## POST /api/permissions\n\nCreates a new permission with the specified name and optional description.\n\n### Request Body\n```json\n{\n    \"name\": \"string\",\n    \"description\": \"string\" (optional)\n}\n```\n\n### Response\n- 200 OK: Returns the created permission\n```json\n{\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\" (optional),\n    \"created_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"insert_permission_route","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FormData"}}},"required":true},"responses":{"200":{"description":"Permission created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/permissions/{id}":{"get":{"tags":["crate::routes::permission"],"summary":"Get a specific permission by ID","description":"# API Documentation\n\n## GET /api/permissions/{id}\n\nRetrieves a specific permission by its ID.\n\n### Path Parameters\n- id: UUID of the permission\n\n### Response\n- 200 OK: Returns the permission\n```json\n{\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\" (optional),\n    \"created_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"get_permission_route","parameters":[{"name":"id","in":"path","description":"Permission ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Permission retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"delete":{"tags":["crate::routes::permission"],"summary":"Delete a permission by ID","description":"# API Documentation\n\n## DELETE /api/permissions/{id}\n\nDeletes a specific permission by its ID.\n\n### Path Parameters\n- id: UUID of the permission to delete\n\n### Response\n- 200 OK: Returns the deleted permission\n```json\n{\n    \"id\": \"uuid\",\n    \"name\": \"string\",\n    \"description\": \"string\" (optional),\n    \"created_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"delete_permission_route","parameters":[{"name":"id","in":"path","description":"Permission ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Permission deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Permission"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/user_groups":{"get":{"tags":["crate::routes::user_group"],"summary":"Get all user groups with pagination","description":"# API Documentation\n\n## GET /api/user_groups\n\nRetrieves all user groups with optional pagination and filtering.\n\n### Query Parameters\n- page: Page number (optional)\n- size: Items per page (optional)\n- sort: Sort field (optional)\n- order: Sort order (asc/desc) (optional)\n\n### Response\n- 200 OK: Returns list of user groups\n```json\n[\n    {\n        \"id\": \"uuid\",\n        \"group_name\": \"string\",\n        \"created_at\": \"datetime\",\n        \"updated_at\": \"datetime\"\n    }\n]\n```\n- 500 Internal Server Error: Database error","operationId":"get_all_user_groups_route","parameters":[{"name":"page","in":"query","description":"Page number","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"size","in":"query","description":"Page size","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"sort","in":"query","description":"Sort field","required":false,"schema":{"type":"string"}},{"name":"order","in":"query","description":"Sort order (asc/desc)","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"User groups retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DtoResponse_Vec_UserGroup"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"put":{"tags":["crate::routes::user_group"],"summary":"Update an existing user group","description":"# API Documentation\n\n## PUT /api/user_groups\n\nUpdates an existing user group.\n\n### Request Body\n```json\n{\n    \"id\": \"uuid\",\n    \"group_name\": \"string\",\n    \"created_at\": \"datetime\",\n    \"updated_at\": \"datetime\"\n}\n```\n\n### Response\n- 200 OK: Returns the updated user group\n```json\n{\n    \"id\": \"uuid\",\n    \"group_name\": \"string\",\n    \"created_at\": \"datetime\",\n    \"updated_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"update_user_group_route","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}},"required":true},"responses":{"200":{"description":"User group updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"post":{"tags":["crate::routes::user_group"],"summary":"Create a new user group","description":"# API Documentation\n\n## POST /api/user_groups\n\nCreates a new user group with the specified name.\n\n### Request Body\n```json\n{\n    \"group_name\": \"string\"\n}\n```\n\n### Response\n- 200 OK: Returns the created user group\n```json\n{\n    \"id\": \"uuid\",\n    \"group_name\": \"string\",\n    \"created_at\": \"datetime\",\n    \"updated_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"insert_user_group_route","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FormData"}}},"required":true},"responses":{"200":{"description":"User group created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/user_groups/{id}":{"get":{"tags":["crate::routes::user_group"],"summary":"Get a specific user group by ID","description":"# API Documentation\n\n## GET /api/user_groups/{id}\n\nRetrieves a specific user group by its ID.\n\n### Path Parameters\n- id: UUID of the user group\n\n### Response\n- 200 OK: Returns the user group\n```json\n{\n    \"id\": \"uuid\",\n    \"group_name\": \"string\",\n    \"created_at\": \"datetime\",\n    \"updated_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"get_user_group_route","parameters":[{"name":"id","in":"path","description":"User group ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"User group retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"delete":{"tags":["crate::routes::user_group"],"summary":"Delete a user group by ID","description":"# API Documentation\n\n## DELETE /api/user_groups/{id}\n\nDeletes a specific user group by its ID.\n\n### Path Parameters\n- id: UUID of the user group to delete\n\n### Response\n- 200 OK: Returns the deleted user group\n```json\n{\n    \"id\": \"uuid\",\n    \"group_name\": \"string\",\n    \"created_at\": \"datetime\",\n    \"updated_at\": \"datetime\"\n}\n```\n- 500 Internal Server Error: Database error","operationId":"delete_user_group_route","parameters":[{"name":"id","in":"path","description":"User group ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"User group deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/users":{"get":{"tags":["crate::routes::user"],"summary":"Get all users with pagination","description":"# API Documentation\n\n## GET /api/users\n\nRetrieves all users with optional pagination and filtering.\n\n### Query Parameters\n- page: Page number (optional)\n- size: Items per page (optional)\n- sort: Sort field (optional)\n- order: Sort order (asc/desc) (optional)\n\n### Response\n- 200 OK: Returns list of users\n```json\n[\n    {\n        \"id\": \"uuid\",\n        \"username\": \"string\",\n        \"created_at\": \"datetime\",\n        \"user_group_id\": \"uuid\" (optional)\n    }\n]\n```\n- 500 Internal Server Error: Database error","operationId":"get_all_users_route","parameters":[{"name":"page","in":"query","description":"Page number","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"size","in":"query","description":"Page size","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"sort","in":"query","description":"Sort field","required":false,"schema":{"type":"string"}},{"name":"order","in":"query","description":"Sort order (asc/desc)","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Users retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DtoResponse_Vec_UserResponse"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"post":{"tags":["crate::routes::user"],"summary":"Create a new user","description":"# API Documentation\n\n## POST /api/users\n\nCreates a new user with the provided information.\n\n### Request Body\n```json\n{\n    \"username\": \"string\",\n    \"password\": \"string\",\n    \"user_group_id\": \"uuid\" (optional)\n}\n```\n\n### Response\n- 200 OK: Returns the created user\n```json\n{\n    \"id\": \"uuid\",\n    \"username\": \"string\",\n    \"created_at\": \"datetime\",\n    \"user_group_id\": \"uuid\" (optional)\n}\n```\n- 500 Internal Server Error: Database error","operationId":"insert_user_route","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserFormData"}}},"required":true},"responses":{"200":{"description":"User created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"delete":{"tags":["crate::routes::user"],"summary":"Delete multiple users by their IDs","description":"# API Documentation\n\n## DELETE /api/users\n\nDeletes multiple users by their IDs.\n\n### Request Body\n```json\n[\n    \"uuid\",\n    \"uuid\"\n]\n```\n\n### Response\n- 200 OK: Returns the number of deleted users\n```json\n{\n    \"count\": 2\n}\n```\n- 500 Internal Server Error: Database error","operationId":"delete_users_route","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"string","format":"uuid"}}}},"required":true},"responses":{"200":{"description":"Users deleted successfully","content":{"text/plain":{"schema":{"type":"integer","format":"int64"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}},"/api/users/{id}":{"get":{"tags":["crate::routes::user"],"summary":"Get a specific user by ID","description":"# API Documentation\n\n## GET /api/users/{id}\n\nRetrieves a specific user by their ID.\n\n### Path Parameters\n- id: UUID of the user\n\n### Response\n- 200 OK: Returns the user\n```json\n{\n    \"id\": \"uuid\",\n    \"username\": \"string\",\n    \"created_at\": \"datetime\",\n    \"user_group_id\": \"uuid\" (optional)\n}\n```\n- 500 Internal Server Error: Database error","operationId":"get_user_route","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"User retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"put":{"tags":["crate::routes::user"],"summary":"Update an existing user","description":"# API Documentation\n\n## PUT /api/users/{id}\n\nUpdates an existing user.\n\n### Path Parameters\n- id: UUID of the user to update\n\n### Request Body\n```json\n{\n    \"username\": \"string\",\n    \"password\": \"string\" (optional),\n    \"user_group_id\": \"uuid\" (optional)\n}\n```\n\n### Response\n- 200 OK: Returns the updated user\n```json\n{\n    \"id\": \"uuid\",\n    \"username\": \"string\",\n    \"created_at\": \"datetime\",\n    \"user_group_id\": \"uuid\" (optional)\n}\n```\n- 500 Internal Server Error: Database error","operationId":"update_user_route","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserFormData"}}},"required":true},"responses":{"200":{"description":"User updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}},"delete":{"tags":["crate::routes::user"],"summary":"Delete a specific user by ID","description":"# API Documentation\n\n## DELETE /api/users/{id}\n\nDeletes a specific user by their ID.\n\n### Path Parameters\n- id: UUID of the user\n\n### Response\n- 200 OK: Returns the deleted user\n```json\n{\n    \"id\": \"uuid\",\n    \"username\": \"string\",\n    \"created_at\": \"datetime\",\n    \"user_group_id\": \"uuid\" (optional)\n}\n```\n- 500 Internal Server Error: Database error","operationId":"delete_user_route","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"User deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"500":{"description":"Database error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AlohaError"}}}}}}}},"components":{"schemas":{"AlohaError":{"oneOf":[{"type":"object","required":["DatabaseError"],"properties":{"DatabaseError":{"type":"string"}}}]},"CreateUserFormData":{"type":"object","required":["username","password"],"properties":{"password":{"type":"string"},"user_group_id":{"type":["string","null"],"format":"uuid"},"username":{"type":"string"}}},"DtoResponse_GroupPermission":{"type":"object","required":["data"],"properties":{"data":{"type":"object","required":["group_id","permission_id"],"properties":{"group_id":{"type":"string","format":"uuid"},"permission_id":{"type":"string","format":"uuid"}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"DtoResponse_Permission":{"type":"object","required":["data"],"properties":{"data":{"type":"object","required":["id","name","created_at"],"properties":{"created_at":{"type":"string"},"description":{"type":["string","null"]},"id":{"type":"string","format":"uuid"},"name":{"type":"string"}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"DtoResponse_UserGroup":{"type":"object","required":["data"],"properties":{"data":{"type":"object","required":["id","group_name","created_at"],"properties":{"created_at":{"type":"string"},"group_name":{"type":"string"},"id":{"type":"string","format":"uuid"}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"DtoResponse_UserResponse":{"type":"object","required":["data"],"properties":{"data":{"type":"object","required":["id","username"],"properties":{"created_at":{"type":["string","null"]},"id":{"type":"string","format":"uuid"},"user_group_id":{"type":["string","null"],"format":"uuid"},"username":{"type":"string"}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"DtoResponse_Vec_GroupPermission":{"type":"object","required":["data"],"properties":{"data":{"type":"array","items":{"type":"object","required":["group_id","permission_id"],"properties":{"group_id":{"type":"string","format":"uuid"},"permission_id":{"type":"string","format":"uuid"}}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"DtoResponse_Vec_Permission":{"type":"object","required":["data"],"properties":{"data":{"type":"array","items":{"type":"object","required":["id","name","created_at"],"properties":{"created_at":{"type":"string"},"description":{"type":["string","null"]},"id":{"type":"string","format":"uuid"},"name":{"type":"string"}}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"DtoResponse_Vec_UserGroup":{"type":"object","required":["data"],"properties":{"data":{"type":"array","items":{"type":"object","required":["id","group_name","created_at"],"properties":{"created_at":{"type":"string"},"group_name":{"type":"string"},"id":{"type":"string","format":"uuid"}}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"DtoResponse_Vec_UserResponse":{"type":"object","required":["data"],"properties":{"data":{"type":"array","items":{"type":"object","required":["id","username"],"properties":{"created_at":{"type":["string","null"]},"id":{"type":"string","format":"uuid"},"user_group_id":{"type":["string","null"],"format":"uuid"},"username":{"type":"string"}}}},"pagination":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/Pagination"}]}}},"FormData":{"type":"object","required":["group_name"],"properties":{"group_name":{"type":"string"}}},"GroupPermission":{"type":"object","required":["group_id","permission_id"],"properties":{"group_id":{"type":"string","format":"uuid"},"permission_id":{"type":"string","format":"uuid"}}},"Pagination":{"type":"object","properties":{"next_page":{"type":["string","null"]},"page":{"type":["integer","null"],"minimum":0},"prev_page":{"type":["string","null"]},"size":{"type":["integer","null"],"minimum":0},"total":{"type":["integer","null"],"format":"int64"}}},"Permission":{"type":"object","required":["id","name","created_at"],"properties":{"created_at":{"type":"string"},"description":{"type":["string","null"]},"id":{"type":"string","format":"uuid"},"name":{"type":"string"}}},"UpdateUserFormData":{"type":"object","required":["username"],"properties":{"password":{"type":["string","null"]},"user_group_id":{"type":["string","null"],"format":"uuid"},"username":{"type":"string"}}},"User":{"type":"object","required":["id","username"],"properties":{"id":{"type":"string","format":"uuid"},"user_group_id":{"type":["string","null"],"format":"uuid"},"username":{"type":"string"}}},"UserGroup":{"type":"object","required":["id","group_name","created_at"],"properties":{"created_at":{"type":"string"},"group_name":{"type":"string"},"id":{"type":"string","format":"uuid"}}},"UserResponse":{"type":"object","required":["id","username"],"properties":{"created_at":{"type":["string","null"]},"id":{"type":"string","format":"uuid"},"user_group_id":{"type":["string","null"],"format":"uuid"},"username":{"type":"string"}}}}},"tags":[{"name":"group-permissions","description":"Group Permission Management API"},{"name":"permissions","description":"Permission Management API"},{"name":"users","description":"User Management API"},{"name":"user-groups","description":"User Group Management API"},{"name":"health","description":"Health Check API"}]}